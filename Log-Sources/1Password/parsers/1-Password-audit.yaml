name: 1-Password
tests:
- '{"uuid":"LFZ6JIR2RYKFSVMFB5HTVEUKOX","timestamp":"2024-04-30T21:50:09.907587864Z","actor_uuid":"NHLTVCMHUJFERWCMDGDICVD0JX","actor_details":{"uuid":"NHLTVCMHUJFERWCMDGDICVD0JX","name":"Friendly
  Name","email":"arqyif1xf7auw@jivjrprquosfbaq.com"},"action":"dlgsess","object_type":"dlgdsess","session":{"uuid":"TPB3338DLBENC2GQT2H3ADRLXV","login_time":"2024-04-30T21:50:09.420029802Z","device_uuid":"n5rv47cz320sdl3tlticd8ui64","ip":"100.101.102.103"},"location":{"country":"United
  States","region":"California","city":"San Jose","latitude":31.1111,"longitude":-111.1111}}'
- '{"uuid":"TJWGFJBSSVEN2BUUHGMFDJLOB9","timestamp":"2024-04-30T21:50:09.634057949Z","actor_uuid":"HHX86OHL3FU4UPOEWPEDZYFERG","actor_details":{"uuid":"HHX86OHL3FU4UPOEWPEDZYFERG","name":"Friendly
  Name","email":"fiu0dryvazwtc@4mqcmoybzfsznay.com"},"action":"dlgsess","object_type":"dlgdsess","session":{"uuid":"OOKS3QDMTXSCX1QQSOEEDEHXXY","login_time":"2024-04-30T21:50:09.420029802Z","device_uuid":"u2keohnfzh0s1812lzjs4ykrsa","ip":"100.101.102.103"},"location":{"country":"United
  States","region":"California","city":"San Jose","latitude":31.1111,"longitude":-111.1111}}'
- '{"uuid":"DCGH5N58CVGHQKYYNS8XRNNLYY","timestamp":"2024-04-30T21:50:09.424964294Z","actor_uuid":"K5NDJJ0E0X9SD7G9LB4NJGDHV0","actor_details":{"uuid":"K5NDJJ0E0X9SD7G9LB4NJGDHV0","name":"Friendly
  Name","email":"ceb4jvpzkxwip@f8mklsa9jsvlaqo.com"},"action":"ssotknv","object_type":"ssotkn","aux_info":"{\"expiry\":\"2024-04-30T22:00:08Z\",\"deviceUuid\":\"ao2wlrrl177fwef9efggi1c4q3\"}","session":{"uuid":"2JIDYYWA7JYZ2PSH0KSI7XFECH","login_time":"2024-04-30T21:50:09.420029802Z","device_uuid":"uis59g4ub1bxuvxrpdzkrchqwz","ip":"100.101.102.103"},"location":{"country":"United
  States","region":"California","city":"San Jose","latitude":31.1111,"longitude":-111.1111}}'
fieldsToBeRemovedBeforeParsing: []
$schema: https://schemas.humio.com/parser/v0.2.0
script: |-
  /************************************************************
  ****** Parse timestamp and log headers
  ****** Extract message field for parsing
  ****** Parse structured data
  ************************************************************/
  | parseJson(prefix="Vendor.", excludeEmpty="true", handleNull="discard")
  | parseTimestamp(field="Vendor.timestamp")
  | parseJson(field="Vendor.aux_info", prefix="Vendor.aux_info.")


  // #region METADATA
  /************************************************************
  ****** Static Metadata Definitions
  ************************************************************/
  | Parser_version := "0.1.0"
  | Vendor := "1password"
  | event.module := "audit-logs"
  | ecs.version := "8.11.0"
  | Cps.version := "1.0.0"
  | event.dataset := "1password.audit"
  | event.kind := "event"
  | event.module := "1password"
  | event.outcome := "success"
  | observer.type := "IAM"

  /************************************************************
  ****** Parse unstructured data (i.e. message field)
  ****** Normalize fields to data model
  ************************************************************/
  | event.type := Vendor.object_type
  | event.id := Vendor.uuid
  | user.email := Vendor.actor_details.email
  | user.full_name := Vendor.actor_details.name
  | user.id := Vendor.actor_uuid
  | host.id := Vendor.aux_info.deviceUuid
  | client.geo.city_name := Vendor.location.city
  | client.geo.country_name := Vendor.location.country
  | client.geo.location := format("{ \"lon\": %s,\"lat\": %s }", field=[Vendor.location.longitude, Vendor.location.latitude])
  | client.geo.region_name := Vendor.location.region

  /************************************************************
  ****** Post Normalization
  ****** Custom parser logic needed after normalization
  ************************************************************/
  | case{
      Vendor.action=*
      | event.action := format("%s-%s", field=[Vendor.action, Vendor.object_type])
      | match(file="Audit-events.csv", column="concat-action-type", field=event.action, include=["Event", "Description"], strict=false);*}
tagFields:
- Cps.version
- Vendor
- ecs.version
- event.dataset
- event.kind
- event.module
- event.outcome
- event.action
